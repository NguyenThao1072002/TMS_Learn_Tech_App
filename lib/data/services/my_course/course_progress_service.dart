import 'package:dio/dio.dart';
import 'package:tms_app/data/models/course_progress_model.dart';
import 'package:tms_app/core/utils/constants.dart';
import 'package:tms_app/data/models/my_course/completed_lession_model.dart';

/// Service x·ª≠ l√Ω c√°c API li√™n quan ƒë·∫øn ti·∫øn tr√¨nh h·ªçc t·∫≠p
class CourseProgressService {
  final Dio _dio;

  /// Constructor
  CourseProgressService(this._dio);
  final String baseUrl = "${Constants.BASE_URL}";

  /// Th√™m ti·∫øn tr√¨nh m·ªõi khi ng∆∞·ªùi d√πng b·∫Øt ƒë·∫ßu h·ªçc kh√≥a h·ªçc
  ///
  /// [accountId] ID c·ªßa t√†i kho·∫£n ng∆∞·ªùi d√πng
  /// [courseId] ID c·ªßa kh√≥a h·ªçc
  Future<CourseProgressResponse> addCourseProgress(
      String accountId, int courseId) async {
    try {
      final response = await _dio.post(
        '${baseUrl}/api/progress/add',
        queryParameters: {
          'accountId': accountId,
          'courseId': courseId,
        },
      );

      return CourseProgressResponse.fromJson(response.data);
    } catch (e) {
      throw _handleError(e);
    }
  }

  /// M·ªü kh√≥a b√†i h·ªçc ti·∫øp theo khi ng∆∞·ªùi d√πng ho√†n th√†nh b√†i h·ªçc hi·ªán t·∫°i
  ///
  /// [accountId] ID c·ªßa t√†i kho·∫£n ng∆∞·ªùi d√πng
  /// [courseId] ID c·ªßa kh√≥a h·ªçc
  /// [chapterId] ID c·ªßa ch∆∞∆°ng h·ªçc
  /// [lessonId] ID c·ªßa b√†i h·ªçc hi·ªán t·∫°i
  Future<UnlockNextLessonResponse> unlockNextLesson(
      String accountId, int courseId, int chapterId, int lessonId) async {
    try {
      print(
          'üîÑ ƒêang g·ªçi API m·ªü kh√≥a b√†i h·ªçc ti·∫øp theo v·ªõi accountId=$accountId, courseId=$courseId, chapterId=$chapterId, lessonId=$lessonId');

      final response = await _dio.post(
        '${baseUrl}/api/progress/unlock-next',
        queryParameters: {
          'accountId': accountId,
          'courseId': courseId,
          'chapterId': chapterId,
          'lessonId': lessonId,
        },
      );

      print('‚úÖ ƒê√£ m·ªü kh√≥a b√†i h·ªçc ti·∫øp theo th√†nh c√¥ng');
      return UnlockNextLessonResponse.fromJson(response.data);
    } on DioException catch (e) {
      // Ki·ªÉm tra l·ªói k·∫øt n·ªëi v√† th·ª≠ l·∫°i
      if (e.type == DioExceptionType.connectionTimeout ||
          e.type == DioExceptionType.connectionError ||
          e.type == DioExceptionType.receiveTimeout) {
        print('‚ö†Ô∏è L·ªói k·∫øt n·ªëi khi m·ªü kh√≥a b√†i h·ªçc ti·∫øp theo, ƒëang th·ª≠ l·∫°i...');

        // ƒê·ª£i 2 gi√¢y v√† th·ª≠ l·∫°i
        await Future.delayed(const Duration(seconds: 2));

        try {
          final retryResponse = await _dio.post(
            '${baseUrl}/api/progress/unlock-next',
            queryParameters: {
              'accountId': accountId,
              'courseId': courseId,
              'chapterId': chapterId,
              'lessonId': lessonId,
            },
          );

          print('‚úÖ ƒê√£ m·ªü kh√≥a b√†i h·ªçc ti·∫øp theo th√†nh c√¥ng sau khi th·ª≠ l·∫°i');
          return UnlockNextLessonResponse.fromJson(retryResponse.data);
        } catch (retryError) {
          throw _handleError(retryError);
        }
      }

      throw _handleError(e);
    } catch (e) {
      throw _handleError(e);
    }
  }

  // /// C·∫≠p nh·∫≠t ti·∫øn tr√¨nh h·ªçc t·∫≠p c·ªßa ng∆∞·ªùi d√πng
  // ///
  // /// [progressModel] Model ch·ª©a th√¥ng tin ti·∫øn tr√¨nh c·∫ßn c·∫≠p nh·∫≠t
  // Future<CourseProgressResponse> updateCourseProgress(
  //     CourseProgressModel progressModel) async {
  //   try {
  //     final response = await _dio.put(
  //       '${ApiConstants.baseUrl}/api/progress/update',
  //       data: progressModel.toJson(),
  //     );

  //     return CourseProgressResponse.fromJson(response.data);
  //   } catch (e) {
  //     throw _handleError(e);
  //   }
  // }

  // /// L·∫•y ti·∫øn tr√¨nh h·ªçc t·∫≠p c·ªßa ng∆∞·ªùi d√πng cho m·ªôt kh√≥a h·ªçc c·ª• th·ªÉ
  // ///
  // /// [accountId] ID c·ªßa t√†i kho·∫£n ng∆∞·ªùi d√πng
  // /// [courseId] ID c·ªßa kh√≥a h·ªçc
  // Future<CourseProgressModel> getCourseProgress(
  //     int accountId, int courseId) async {
  //   try {
  //     final response = await _dio.get(
  //       '${ApiConstants.baseUrl}/api/progress',
  //       queryParameters: {
  //         'accountId': accountId,
  //         'courseId': courseId,
  //       },
  //     );

  //     return CourseProgressModel.fromJson(response.data['data']);
  //   } catch (e) {
  //     throw _handleError(e);
  //   }
  // }

  /// X·ª≠ l√Ω l·ªói t·ª´ API
  Exception _handleError(dynamic error) {
    if (error is DioException) {
      if (error.response != null) {
        final statusCode = error.response!.statusCode;
        final message = error.response!.data['message'] ?? 'L·ªói kh√¥ng x√°c ƒë·ªãnh';

        return Exception('L·ªói $statusCode: $message');
      }
      return Exception('L·ªói k·∫øt n·ªëi: ${error.message}');
    }
    return Exception('ƒê√£ x·∫£y ra l·ªói: $error');
  }
}
